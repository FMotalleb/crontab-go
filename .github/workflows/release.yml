name: release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: read

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: fmotalleb/crontab-go

jobs:
  goreleaser:
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: '1.24'
          check-latest: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.REGISTRY}}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: go install github.com/goreleaser/goreleaser/v2@latest
      - run: goreleaser release 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload dist
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: dist
          path: dist
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
      - name: Build and push Docker image Slim (bookworm-slim)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}-slim
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-slim
          target: "slim"
          labels: ${{ steps.meta.outputs.labels }}
      - name: Build and push Docker image Static (distroless)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}-static
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-static
          labels: ${{ steps.meta.outputs.labels }}
          target: "static"